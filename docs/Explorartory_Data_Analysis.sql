--Exploratory Data Analysis

--Explore all objects in the database--

SELECT *
FROM INFORMATION_SCHEMA.TABLES;

SELECT *
FROM INFORMATION_SCHEMA.COLUMNS;

--Explore all columns in the database--

SELECT *
FROM gold.dim_customers;

SELECT *
FROM gold.dim_products;

SELECT * 
FROM gold.fact_sales;

--Dimension Exploration--

--Customer
SELECT DISTINCT country
FROM gold.dim_customers;
--Product
SELECT DISTINCT category_name
FROM gold.dim_products;

SELECT DISTINCT subcategory_name
FROM gold.dim_products;

SELECT DISTINCT product_line
FROM gold.dim_products;

SELECT DISTINCT category_name,subcategory_name,product_name
FROM gold.dim_products
ORDER BY 1,2,3;

--Date columns--
--Customer
SELECT MIN(create_date) AS First_customer,
       MAX(create_date) AS Latest_customer,
	   MIN(birthdate) AS oldest_customer,
	   MAX(birthdate) AS youngest_customer,
	   DATEDIFF(year,MAX(birthdate),GETDATE()) AS oldest_customer_age,
	   DATEDIFF(year,MIN(birthdate),GETDATE()) AS youngest_customer_age
FROM gold.dim_customers;

SELECT DISTINCT YEAR(create_date)
FROM gold.dim_customers;

--Orders
SELECT MIN(order_date) AS first_order,
       MAX(order_date) AS latest_order,
	   DATEDIFF(YEAR,MIN(order_date),MAX(order_date)) AS order_range
FROM gold.fact_sales;

SELECT DISTINCT YEAR(order_date)
FROM gold.fact_sales
ORDER BY 1;

--Measures Exploration--

SELECT * 
FROM gold.fact_sales;
--Total sales,Total items that sold,Sales value and AVG price
SELECT 
       count(Distinct sales_order_number) AS Total_orders,
       SUM(sales_amount) AS Total_Sales_Value,
	   SUM(quantity_sold) AS Total_Quantity,
       AVG(unit_price) AS Avg_Price
FROM gold.fact_sales; 

--Total customers
SELECT count(*) AS Total_Customers
FROM gold.dim_customers;

--Total customers that has placed an order
SELECT COUNT(DISTINCT customer_key)
FROM gold.fact_sales fs; 

--Total_Products
SELECT COUNT(product_key) AS Total_Products
FROM gold.dim_products;

SELECT 'Total orders' AS measure_name,count(Distinct sales_order_number) AS measure_value FROM gold.fact_sales

--==============================================================--
-- Summary report combining all key metrics--
SELECT 'Total Orders' AS measure_name, COUNT(DISTINCT sales_order_number) AS measure_value
FROM gold.fact_sales

UNION ALL

SELECT 'Total Sales Value', SUM(sales_amount)
FROM gold.fact_sales

UNION ALL

SELECT 'Total Quantity Sold', SUM(quantity_sold)
FROM gold.fact_sales

UNION ALL

SELECT 'Average Unit Price', AVG(unit_price)
FROM gold.fact_sales

UNION ALL

SELECT 'Total Customers', COUNT(*) 
FROM gold.dim_customers

UNION ALL

SELECT 'Customers with Orders', COUNT(DISTINCT customer_key)
FROM gold.fact_sales

UNION ALL

SELECT 'Total Products', COUNT(product_key)
FROM gold.dim_products;
--=====================================================================--

--Magnitude Measures--

--Total customers by country
SELECT country,
       COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY 2 DESC;

--Total customers by gender
SELECT gender,COUNT(*) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY 2 DESC;

--Total product by category
SELECT category_name,count(product_id) AS total_products
FROM gold.dim_products
GROUP BY category_name
ORDER BY 2 DESC;

--AVG cost in each category
SELECT category_name,
       AVG(cost) AS AVG_price
FROM gold.dim_products 
GROUP BY category_name
ORDER BY 2 DESC;

--Total revenue for each category
SELECT pd.category_name,
       SUM(fs.sales_amount) AS total_revenue
FROM  gold.fact_sales fs JOIN gold.dim_products pd on fs.product_key = pd.product_key
GROUP BY pd.category_name
ORDER BY 2 DESC;

--Total Revenue generated by each customer
SELECT cd.customer_key,concat(cd.first_name,' ',cd.last_name) AS full_name,
       SUM(fs.sales_amount) AS total_revenue
FROM  gold.fact_sales fs JOIN gold.dim_customers cd on fs.customer_key = cd.customer_key
GROUP BY cd.customer_key,concat(cd.first_name,' ',cd.last_name)
ORDER BY 3 DESC;

--Distribution of sold items across countries
SELECT cd.country,
       SUM(fs.quantity_sold) AS total_sold_items
FROM  gold.fact_sales fs JOIN gold.dim_customers cd on fs.customer_key = cd.customer_key
GROUP BY cd.country
ORDER BY 2 DESC;
--===================================================================================
--Ranking Measures--
--Which 5 products generate the highest revenue
SELECT TOP 5 pd.subcategory_name,
       SUM(fs.sales_amount) AS total_revenue,
	   ROW_NUMBER() OVER( ORDER BY SUM(fs.sales_amount) DESC) AS rank_product
FROM  gold.fact_sales fs JOIN gold.dim_products pd on fs.product_key = pd.product_key
GROUP BY pd.subcategory_name
ORDER BY 2 DESC;
--Worst 5
SELECT TOP 5 pd.subcategory_name,
       SUM(fs.sales_amount) AS total_revenue,
	   ROW_NUMBER() OVER( ORDER BY SUM(fs.sales_amount)) AS rank_product
FROM  gold.fact_sales fs JOIN gold.dim_products pd on fs.product_key = pd.product_key
GROUP BY pd.subcategory_name
ORDER BY 2;

--TOP 10 customers who have generated the highest revenue
SELECT TOP 10 cd.customer_key,concat(cd.first_name,' ',cd.last_name) AS full_name,
       SUM(fs.sales_amount) AS total_revenue
FROM  gold.fact_sales fs JOIN gold.dim_customers cd on fs.customer_key = cd.customer_key
GROUP BY cd.customer_key,concat(cd.first_name,' ',cd.last_name)
ORDER BY 3 DESC;